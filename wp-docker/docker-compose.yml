x-logging: &logging
  logging:
    options:
      tag: "{{.Name}}"

services:
  wpfront:
    # Wordpress image tag: 5.8.0-apache
    # image: wordpress@sha256:865ea4e55495630ae167c2240f6c9969e2fd185e2990c5edfac0914ce513b0cb
    build:
      context: ${PWD}/context/wordpress
      dockerfile: ${PWD}/dockerfiles/Dockerfile-wordpress
    restart: always
    depends_on: 
      - db
      - haproxy
      - varnish
    env_file:
      - wp.env
    read_only: yes
    user: "www-data:www-data"
    volumes: 
      - /var/www/html/wordpress/wp-content
      - /tmp
      - /run/lock/apache2
      - /run/apache2
      - ${PWD}/context/wordpress/document-root/healthprobe.php:/var/www/html/wordpress/healthprobe.php:ro
      - ${PWD}/context/wordpress/document-root/wp-config.php:/var/www/html/wordpress/wp-config.php:ro
    networks:
      - wpnet
    deploy:
      mode: replicated
      replicas: 2
    <<: *logging

  db:
    image: percona@sha256:5bc1c13c8f4adfd76ceaac425877e2de2fcd9c33ab685c639e55b23e97eb0c0a
    restart: always
    environment: 
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wpTest2021!
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: zaq1@WSXcde3
    networks:
      - wpnet
    volumes:
      - wp-db-root:/var/lib/mysql
      - ${PWD}/context/mysql:/docker-entrypoint-initdb.d/:ro
    <<: *logging

  haproxy:
    build:
      context: ${PWD}/context/haproxy
      dockerfile: ${PWD}/dockerfiles/Dockerfile-haproxy
    restart: unless-stopped
    networks:
      - wpnet
    ports:
      - 80:80
      - 443:443
      - 55666:5666
    volumes:
      - ${PWD}/context/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - ${PWD}/context/haproxy/cert.pem:/etc/ssl/certs/test/cert.pem:ro
    depends_on: 
      - db
    <<: *logging

  varnish:
    build: 
      context: ${PWD}/context/varnish
      dockerfile: ${PWD}/dockerfiles/Dockerfile-varnish-multistage
    restart: unless-stopped
    networks:
      - wpnet
    depends_on: 
      - haproxy
    ports:
      - 8080:80
    env_file:
      - varnish.env
    volumes:
      - ${PWD}/context/varnish/default.vcl:/etc/varnish/default.vcl:ro
    tmpfs: /var/lib/varnish:exec
    <<: *logging


volumes:
  wp-db-root: {}

networks:
  wpnet:
    ipam:
      config:
        - subnet: "192.168.10.0/24"
